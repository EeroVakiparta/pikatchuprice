name: Deploy PikatchuPrice CDK Stack

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read # for checkout

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        persist-credentials: true

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build TypeScript
      run: npm run build

    - name: Run tests
      run: npm test
      
    - name: Debug GitHub Credentials
      run: |
        echo "GitHub Event Name: ${{ github.event_name }}"
        echo "GitHub Ref: ${{ github.ref }}"
        echo "Is token available? ${{ secrets.GITHUB_TOKEN != '' }}"

    - name: Configure AWS credentials
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1

    - name: CDK Synth
      run: npx cdk synth

    - name: CDK Deploy
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      run: npx cdk deploy --require-approval never 

    - name: Create version.json
      run: |
        echo "{\"version\": \"$(node -e \"console.log(require('./package.json').version)\")\", \"buildDate\": \"$(date -u +'%Y-%m-%dT%H:%M:%S.%3NZ')\"}" > public/version.json
        cat public/version.json

    - name: Generate CHANGELOG
      id: changelog
      uses: conventional-changelog/action@v1.4.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        output-file: 'CHANGELOG.md'

    - name: Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        npx semantic-release 