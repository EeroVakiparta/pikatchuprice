name: Deploy PikatchuPrice CDK Stack

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read # for checkout

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        persist-credentials: true

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build TypeScript
      run: npm run build

    - name: Run tests
      run: npm test
      
    - name: Debug GitHub Credentials
      run: |
        echo "GitHub Event Name: ${{ github.event_name }}"
        echo "GitHub Ref: ${{ github.ref }}"
        echo "Is token available? ${{ secrets.GITHUB_TOKEN != '' }}"

    - name: Configure AWS credentials
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1

    - name: Verify AWS credentials
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      run: |
        echo "Checking AWS credentials configuration..."
        aws sts get-caller-identity || echo "AWS credentials verification failed. Please check GitHub secrets."
        echo "AWS_ACCESS_KEY_ID is set: ${{ secrets.AWS_ACCESS_KEY_ID != '' }}"
        echo "AWS_SECRET_ACCESS_KEY is set: ${{ secrets.AWS_SECRET_ACCESS_KEY != '' }}"

    - name: CDK Synth
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      run: npx cdk synth
      continue-on-error: true

    - name: CDK Deploy
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      run: npx cdk deploy --require-approval never
      continue-on-error: true

    - name: Wait for deployment to stabilize
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      run: sleep 30

    - name: Check for console errors after deployment
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      run: |
        # Install Puppeteer with dependencies
        npm install --save-dev puppeteer
        
        # Ubuntu runners may need additional dependencies for Chromium
        if [ -f /etc/os-release ]; then
          sudo apt-get update
          sudo apt-get install -y libgtk-3-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
        fi
        
        # Run the test with increased timeout
        node test/console-errors.js

    - name: Create version.json
      run: |
        echo "{\"version\": \"$(node -e \"console.log(require('./package.json').version)\")\", \"buildDate\": \"$(date -u +'%Y-%m-%dT%H:%M:%S.%3NZ')\"}" > public/version.json
        cat public/version.json

    - name: Generate CHANGELOG
      id: changelog
      run: |
        npm install -g conventional-changelog-cli
        conventional-changelog -p angular -i CHANGELOG.md -s

    - name: Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        npx semantic-release 